{"version":3,"sources":["firebase.js","pages/ReceptionPage.js","components/OrderCard.js","pages/OrdersPage.js","App.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","ReceptionPage","formData","setFormData","useState","clientName","phone","city","equipment","type","customType","name","serial","date","technician","status","notes","handleEquipmentChange","index","field","value","updated","_objectSpread","handleChange","e","target","React","createElement","className","onSubmit","async","preventDefault","orderWithId","id","uuidv4","setDoc","doc","alert","error","console","onChange","required","rows","map","item","key","placeholder","onClick","splice","handleRemoveEquipment","addEquipment","OrderCard","_ref","order","onUpdate","onDelete","isEditing","setIsEditing","editedOrder","setEditedOrder","prev","Fragment","orderRef","updateDoc","length","window","confirm","deleteDoc","downloadPDF","docPdf","jsPDF","text","concat","forEach","save","OrdersPage","orders","setOrders","filtered","setFiltered","filters","setFilters","equipmentType","statusPriorityValue","_map$status","useEffect","data","getDocs","collection","docs","sort","a","b","Math","min","eq","applyFilters","fetchOrders","handleUpdate","updatedOrder","handleDelete","handleFilterChange","newFilters","applied","arguments","undefined","result","filter","o","some","filteredEquip","filteredEquipment","Boolean","equipmentTypes","Array","from","Set","flatMap","i","App","Router","Link","to","Routes","Route","path","element","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.1074b8bb.chunk.js","sourcesContent":["// src/firebase.js\r\nimport { initializeApp } from 'firebase/app';\r\nimport { getFirestore } from 'firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBhvAhySTY9NE10_oenVOYxDYx20pafY3w\",\r\n  authDomain: \"servicecenter-tetser.firebaseapp.com\",\r\n  projectId: \"servicecenter-tetser\",\r\n  storageBucket: \"servicecenter-tetser.firebasestorage.app\",\r\n  messagingSenderId: \"177149149059\",\r\n  appId: \"1:177149149059:web:d9138e71616742b30640b6\"\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nexport const db = getFirestore(app);\r\n","import React, { useState } from 'react';\r\nimport { db } from '../firebase'; // путь зависит от расположения firebase.js\r\nimport { setDoc, doc } from 'firebase/firestore';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n\r\nconst ReceptionPage = () => {\r\n  const [formData, setFormData] = useState({\r\n    clientName: '',\r\n    phone: '',\r\n    city: 'Астана',\r\n    equipment: [{ type: '', customType: '', name: '', serial: '' }],\r\n    date: '',\r\n    technician: '',\r\n    status: 'Диагностика',\r\n    notes: '',\r\n  });\r\n\r\n  const handleEquipmentChange = (index, field, value) => {\r\n    const updated = [...formData.equipment];\r\n    updated[index][field] = value;\r\n    setFormData({ ...formData, equipment: updated });\r\n  };\r\n\r\n  const handleRemoveEquipment = (index) => {\r\n    const updated = [...formData.equipment];\r\n    updated.splice(index, 1);\r\n    setFormData({ ...formData, equipment: updated });\r\n  };\r\n\r\n  const addEquipment = () => {\r\n    setFormData({\r\n      ...formData,\r\n      equipment: [...formData.equipment, { type: '', customType: '', name: '', serial: '' }],\r\n    });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\nconst handleSubmit = async (e) => {\r\n  e.preventDefault();\r\n\r\n  const orderWithId = {\r\n    ...formData,\r\n    id: uuidv4(), // генерируем уникальный ID\r\n  };\r\n\r\n  try {\r\n    await setDoc(doc(db, 'orders', orderWithId.id), orderWithId);\r\n    alert('Заявка сохранена!');\r\n  } catch (error) {\r\n    console.error('Ошибка при сохранении заявки:', error);\r\n    alert('Ошибка при сохранении!');\r\n    return;\r\n  }\r\n\r\n  // Очистка формы\r\n  setFormData({\r\n    clientName: '',\r\n    phone: '',\r\n    city: 'Астана',\r\n    equipment: [{ type: '', customType: '', name: '', serial: '' }],\r\n    date: '',\r\n    technician: '',\r\n    status: 'Диагностика',\r\n    notes: '',\r\n  });\r\n};\r\n\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"card shadow\">\r\n        <div className=\"card-header bg-primary text-white\">\r\n          <h4 className=\"mb-0\">📋 Приём оборудования</h4>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"row g-3\">\r\n              <div className=\"col-md-6\">\r\n                <label className=\"form-label\">Имя клиента</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"clientName\"\r\n                  className=\"form-control\"\r\n                  value={formData.clientName}\r\n                  onChange={handleChange}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <label className=\"form-label\">Телефон</label>\r\n                <input\r\n                  type=\"tel\"\r\n                  name=\"phone\"\r\n                  className=\"form-control\"\r\n                  value={formData.phone}\r\n                  onChange={handleChange}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <label className=\"form-label\">Город</label>\r\n                <select\r\n                  name=\"city\"\r\n                  className=\"form-select\"\r\n                  value={formData.city}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option>Астана</option>\r\n                  <option>Алматы</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <label className=\"form-label\">Дата приёма</label>\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"date\"\r\n                  className=\"form-control\"\r\n                  value={formData.date}\r\n                  onChange={handleChange}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <label className=\"form-label\">Имя техника</label>\r\n                  <select\r\n                    className=\"form-select mb-3\"\r\n                    name=\"technician\"\r\n                    value={formData.technician}\r\n                    onChange={handleChange}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Выберите техника</option>\r\n                    <option value=\"Мади\">Мади</option>\r\n                    <option value=\"Ермахан\">Ермахан</option>\r\n                  </select>\r\n              </div>\r\n              <div className=\"col-12\">\r\n                <label className=\"form-label\">Заметки</label>\r\n                <textarea\r\n                  name=\"notes\"\r\n                  className=\"form-control\"\r\n                  rows=\"3\"\r\n                  value={formData.notes}\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n\r\n              <hr className=\"my-4\" />\r\n\r\n              <div className=\"col-12\">\r\n                <h5 className=\"mb-3\">🛠 Оборудование</h5>\r\n\r\n                {formData.equipment.map((item, index) => (\r\n                  <div key={index} className=\"border p-2 mb-2 rounded\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-4\">\r\n                        <label>Тип оборудования</label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          value={item.type}\r\n                          onChange={(e) =>\r\n                            handleEquipmentChange(index, 'type', e.target.value)\r\n                          }\r\n                        >\r\n                          <option value=\"\">Выберите...</option>\r\n                          <option value=\"Моноблок\">Моноблок</option>\r\n                          <option value=\"Сканер ШК\">Сканер ШК</option>\r\n                          <option value=\"Принтер Ч\">Принтер Ч</option>\r\n                          <option value=\"Принтер Э\">Принтер Э</option>\r\n                          <option value=\"Электронные весы\">Электронные весы</option>\r\n                          <option value=\"Другое\">Другое</option>\r\n                        </select>\r\n                        {item.type === 'Другое' && (\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control mt-2\"\r\n                            placeholder=\"Укажите тип\"\r\n                            value={item.customType}\r\n                            onChange={(e) =>\r\n                              handleEquipmentChange(index, 'customType', e.target.value)\r\n                            }\r\n                          />\r\n                        )}\r\n                      </div>\r\n                      <div className=\"col-md-4\">\r\n                        <label>Название</label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          value={item.name}\r\n                          onChange={(e) =>\r\n                            handleEquipmentChange(index, 'name', e.target.value)\r\n                          }\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-md-3\">\r\n                        <label>Серийный номер</label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          value={item.serial}\r\n                          onChange={(e) =>\r\n                            handleEquipmentChange(index, 'serial', e.target.value)\r\n                          }\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-md-1 d-flex align-items-end\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-outline-danger btn-sm\"\r\n                          onClick={() => handleRemoveEquipment(index)}\r\n                        >\r\n                          ✕\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-outline-primary\"\r\n                  onClick={addEquipment}\r\n                >\r\n                  + Добавить оборудование\r\n                </button>\r\n              </div>\r\n\r\n              <div className=\"col-12 mt-4\">\r\n                <button type=\"submit\" className=\"btn btn-success w-100\">\r\n                  💾 Сохранить заявку\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReceptionPage;\r\n","import React, { useState } from 'react';\r\nimport { doc, updateDoc, deleteDoc } from 'firebase/firestore';\r\nimport { db } from '../firebase';\r\nimport jsPDF from 'jspdf';\r\n\r\nconst OrderCard = ({ order, onUpdate, onDelete }) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [editedOrder, setEditedOrder] = useState({ ...order });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setEditedOrder((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    try {\r\n      const orderRef = doc(db, 'orders', order.id);\r\n      await updateDoc(orderRef, editedOrder);\r\n      onUpdate(editedOrder); // передаём новый объект\r\n      setIsEditing(false);\r\n    } catch (error) {\r\n      console.error('Ошибка при обновлении заявки:', error);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    if (window.confirm('Удалить заявку?')) {\r\n      try {\r\n        await deleteDoc(doc(db, 'orders', order.id));\r\n        onDelete(order.id);\r\n      } catch (error) {\r\n        console.error('Ошибка при удалении:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const downloadPDF = () => {\r\n    const docPdf = new jsPDF();\r\n    docPdf.text(`Акт выполненных работ`, 20, 20);\r\n    docPdf.text(`Клиент: ${order.clientName}`, 20, 30);\r\n    docPdf.text(`Телефон: ${order.phone}`, 20, 40);\r\n    docPdf.text(`Город: ${order.city}`, 20, 50);\r\n    docPdf.text(`Техник: ${order.technician}`, 20, 60);\r\n    docPdf.text(`Дата: ${order.date}`, 20, 70);\r\n    docPdf.text(`Статус: ${order.status}`, 20, 80);\r\n    docPdf.text(`Заметки: ${order.notes}`, 20, 90);\r\n\r\n    docPdf.text(`Оборудование:`, 20, 110);\r\n    order.equipment.forEach((item, index) => {\r\n      const type = item.type === 'Другое' ? item.customType : item.type;\r\n      docPdf.text(`${index + 1}. ${type}, ${item.name}, SN: ${item.serial}`, 25, 120 + index * 10);\r\n    });\r\n\r\n    docPdf.save(`Заявка_${order.clientName}.pdf`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"card mb-3 shadow-sm\">\r\n      <div className=\"card-body\">\r\n        {isEditing ? (\r\n          <>\r\n            <div className=\"mb-2\">\r\n              <label>Имя клиента</label>\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"clientName\"\r\n                value={editedOrder.clientName}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"mb-2\">\r\n              <label>Телефон</label>\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"phone\"\r\n                value={editedOrder.phone}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"mb-2\">\r\n              <label>Статус</label>\r\n              <select\r\n                className=\"form-control\"\r\n                name=\"status\"\r\n                value={editedOrder.status}\r\n                onChange={handleChange}\r\n              >\r\n                <option value=\"Диагностика\">Диагностика</option>\r\n                <option value=\"В работе\">В работе</option>\r\n                <option value=\"Завершено\">Завершено</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"mb-2\">\r\n              <label>Заметки</label>\r\n              <textarea\r\n                className=\"form-control\"\r\n                name=\"notes\"\r\n                value={editedOrder.notes}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n\r\n            <button onClick={handleSave} className=\"btn btn-success btn-sm me-2\">\r\n              💾 Сохранить\r\n            </button>\r\n            <button onClick={() => setIsEditing(false)} className=\"btn btn-secondary btn-sm me-2\">\r\n              ❌ Отмена\r\n            </button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <h5 className=\"card-title\">{order.clientName}</h5>\r\n            <p className=\"card-text\">\r\n              <strong>Телефон:</strong> {order.phone} <br />\r\n              <strong>Город:</strong> {order.city} <br />\r\n              <strong>Дата:</strong> {order.date} <br />\r\n              <strong>Техник:</strong> {order.technician} <br />\r\n              <strong>Статус:</strong> {order.status} <br />\r\n              <strong>Заметки:</strong> {order.notes}\r\n            </p>\r\n\r\n            {order.equipment && order.equipment.length > 0 && (\r\n              <div className=\"mb-3\">\r\n                <strong>Оборудование:</strong>\r\n                <ul className=\"mt-2\">\r\n                  {order.equipment.map((item, index) => (\r\n                    <li key={index}>\r\n                      {item.type === 'Другое' ? item.customType : item.type} — {item.name} (SN: {item.serial})\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            )}\r\n\r\n            <button onClick={() => setIsEditing(true)} className=\"btn btn-primary btn-sm me-2\">\r\n              ✏️ Редактировать\r\n            </button>\r\n            <button onClick={handleDelete} className=\"btn btn-danger btn-sm me-2\">\r\n              🗑 Удалить\r\n            </button>\r\n            <button onClick={downloadPDF} className=\"btn btn-outline-secondary btn-sm\">\r\n              📄 Скачать АВР\r\n            </button>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderCard;\r\n","import React, { useEffect, useState } from 'react';\r\nimport OrderCard from '../components/OrderCard';\r\nimport { collection, getDocs, setDoc, doc, deleteDoc } from 'firebase/firestore';\r\nimport { db } from '../firebase';\r\n\r\nconst OrdersPage = () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [filtered, setFiltered] = useState([]);\r\n  const [filters, setFilters] = useState({\r\n    city: '',\r\n    equipmentType: '',\r\n    technician: '',\r\n    status: '',\r\n  });\r\n\r\n  const statusPriorityValue = (status) => {\r\n    const map = {\r\n      'Диагностика': 0,\r\n      'Ремонт': 1,\r\n      'Готово': 2,\r\n    };\r\n    return map[status] ?? 99;\r\n  };\r\n\r\n  const fetchOrders = async () => {\r\n    const snapshot = await getDocs(collection(db, 'orders'));\r\n    const data = snapshot.docs.map(doc => ({ ...doc.data(), id: doc.id }));\r\n    data.sort((a, b) => {\r\n      const aPr = Math.min(...a.equipment.map(eq => statusPriorityValue(eq.status)));\r\n      const bPr = Math.min(...b.equipment.map(eq => statusPriorityValue(eq.status)));\r\n      return aPr - bPr;\r\n    });\r\n    setOrders(data);\r\n    applyFilters(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchOrders();\r\n  }, []);\r\n\r\n  const handleUpdate = async (index, updatedOrder) => {\r\n    await setDoc(doc(db, 'orders', updatedOrder.id || `order-${index}`), updatedOrder);\r\n    const updated = [...orders];\r\n    updated[index] = updatedOrder;\r\n    setOrders(updated);\r\n    applyFilters(updated);\r\n  };\r\n\r\n  const handleDelete = async (index) => {\r\n    const order = orders[index];\r\n    if (order.id) {\r\n      await deleteDoc(doc(db, 'orders', order.id));\r\n    }\r\n    const updated = [...orders];\r\n    updated.splice(index, 1);\r\n    setOrders(updated);\r\n    applyFilters(updated);\r\n  };\r\n\r\n  const handleFilterChange = (e) => {\r\n    const { name, value } = e.target;\r\n    const newFilters = { ...filters, [name]: value };\r\n    setFilters(newFilters);\r\n    applyFilters(orders, newFilters);\r\n  };\r\n\r\n  const applyFilters = (data, applied = filters) => {\r\n    let result = [...data];\r\n\r\n    if (applied.city) {\r\n      result = result.filter((o) => o.city === applied.city);\r\n    }\r\n\r\n    if (applied.technician) {\r\n      result = result.filter((o) => o.technician === applied.technician);\r\n    }\r\n\r\n    if (applied.equipmentType) {\r\n      result = result.filter((o) =>\r\n        o.equipment.some(\r\n          (eq) =>\r\n            eq.type === applied.equipmentType ||\r\n            eq.customType === applied.equipmentType\r\n        )\r\n      );\r\n    }\r\n\r\nif (applied.status) {\r\n  result = result\r\n    .map((order) => {\r\n      const filteredEquip = order.equipment.filter(\r\n        (eq) => eq.status === applied.status\r\n      );\r\n      return filteredEquip.length > 0\r\n        ? { ...order, filteredEquipment: filteredEquip }\r\n        : null;\r\n    })\r\n    .filter(Boolean);\r\n}\r\n\r\n\r\n    result.sort((a, b) => {\r\n      const aPr = Math.min(...a.equipment.map(eq => statusPriorityValue(eq.status)));\r\n      const bPr = Math.min(...b.equipment.map(eq => statusPriorityValue(eq.status)));\r\n      return aPr - bPr;\r\n    });\r\n\r\n    setFiltered(result);\r\n  };\r\n\r\n  const equipmentTypes = Array.from(\r\n    new Set(\r\n      orders.flatMap((o) =>\r\n        o.equipment.map((eq) => eq.customType || eq.type).filter(Boolean)\r\n      )\r\n    )\r\n  );\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      <div className=\"d-flex justify-content-between align-items-center mb-2\">\r\n        <h4>📦 Список заявок</h4>\r\n        <span className=\"badge bg-primary fs-6\">\r\n          Кол-во заявок: {filtered.length}\r\n        </span>\r\n      </div>\r\n\r\n      <div className=\"card p-3 mb-4 shadow-sm\">\r\n        <h5>Фильтрация заявок</h5>\r\n        <div className=\"row g-3 mt-2\">\r\n          <div className=\"col-md-3\">\r\n            <label>Город</label>\r\n            <select\r\n              name=\"city\"\r\n              className=\"form-select\"\r\n              value={filters.city}\r\n              onChange={handleFilterChange}\r\n            >\r\n              <option value=\"\">Все города</option>\r\n              <option value=\"Астана\">Астана</option>\r\n              <option value=\"Алматы\">Алматы</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"col-md-3\">\r\n            <label>Тип оборудования</label>\r\n            <select\r\n              name=\"equipmentType\"\r\n              className=\"form-select\"\r\n              value={filters.equipmentType}\r\n              onChange={handleFilterChange}\r\n            >\r\n              <option value=\"\">Все типы</option>\r\n              {equipmentTypes.map((type, i) => (\r\n                <option key={i} value={type}>\r\n                  {type}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"col-md-3\">\r\n            <label>Техник</label>\r\n            <select\r\n              name=\"technician\"\r\n              className=\"form-select\"\r\n              value={filters.technician}\r\n              onChange={handleFilterChange}\r\n            >\r\n              <option value=\"\">Все техники</option>\r\n              <option value=\"Ермахан\">Ермахан</option>\r\n              <option value=\"Мади\">Мади</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"col-md-3\">\r\n            <label>Статус ремонта</label>\r\n            <select\r\n              name=\"status\"\r\n              className=\"form-select\"\r\n              value={filters.status}\r\n              onChange={handleFilterChange}\r\n            >\r\n              <option value=\"\">Все статусы</option>\r\n              <option value=\"Диагностика\">Диагностика</option>\r\n              <option value=\"Ремонт\">Ремонт</option>\r\n              <option value=\"Готово\">Готово</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {filtered.length > 0 ? (\r\n        filtered.map((order) => (\r\n          <OrderCard\r\n            key={order.id}           // Используем уникальный id вместо index\r\n            order={order}\r\n            onUpdate={handleUpdate}\r\n            onDelete={handleDelete}\r\n          />\r\n        ))\r\n      ) : (\r\n        <div className=\"alert alert-info\">Заявки не найдены.</div>\r\n      )}\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrdersPage;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\r\nimport ReceptionPage from './pages/ReceptionPage';\r\nimport OrdersPage from './pages/OrdersPage';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"container mt-3\">\r\n        <nav className=\"mb-4\">\r\n          <Link className=\"btn btn-primary me-2\" to=\"/\">Приём оборудования</Link>\r\n          <Link className=\"btn btn-secondary\" to=\"/orders\">Список заявок</Link>\r\n        </nav>\r\n        <Routes>\r\n          <Route path=\"/\" element={<ReceptionPage />} />\r\n          <Route path=\"/orders\" element={<OrdersPage />} />\r\n        </Routes>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(<App />);\r\n"],"sourceRoot":""}